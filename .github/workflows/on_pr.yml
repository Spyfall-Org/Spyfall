name: Pull Request Workflow

on:
  # Triggers the workflow for pull requests into any (**) base branch
  pull_request:
    branches:
      - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# ensures only 1 of these workflows can exist on a PR at a time. Cancels old ones when new ones are triggered
concurrency:
  group: pr-workflow-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Create Service Key Json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "service_key.json"
          json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Download Secret Files
        run: ./scripts/get_secret_files.main.kts service_key.json

      - name: Set Up Cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Copy gradle properties file
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set Up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Spyfall Debug Apk
        if:  startsWith(github.head_ref, 'release-spyfall')
        id: builddebugapk
        run: ./gradlew assembleLegacyDebug

      - name: Build debug apk
        run: ./gradlew assembleDebug

      - name: Upload apk
        uses: actions/upload-artifact@v2
        with:
          name: debug apk
          path: app/build/outputs/apk/free/debug/app-free-debug.apk

  style:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Create service key json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "service_key.json"
          json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Download secret files
        run: ./scripts/get_secret_files.main.kts service_key.json

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Detekt All
        run: ./gradlew detektAll

      - name: Checkstyle
        run: ./gradlew checkstyleAll

  test:
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Create service key json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "service_key.json"
          json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Download secret files
        run: ./scripts/get_secret_files.main.kts service_key.json

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Copy  gradle properties file
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Unit tests
        run: ./gradlew test --stacktrace
