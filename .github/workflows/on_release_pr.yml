name: Release Pull Request Extras
# Creates assets files and publishes them to a draft release
on:
  # Triggers the workflow for pull requests into any (**) base branch
  pull_request:
    branches:
      - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# ensures only 1 of these workflows can exist on a PR at a time. Cancels old ones when new ones are triggered
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  upload:
    runs-on: ubuntu-latest
    if:  startsWith(github.head_ref, 'release')
    steps:

      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Create service key json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "service_key.json"
          json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Download secret files
        run: ./scripts/get_secret_files.main.kts service_key.json

      - name: Build release apk
        run: ./gradlew assembleLegacyRelease

      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: apps/spyfall/build/outputs/apk/Legacy/release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEYALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Make release apk artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release-signed
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}

      - name: Build debug apk
        run: ./gradlew assembleLegacyDebug

      - name: Make debug apk artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: apps/spyfall/build/outputs/apk/Legacy/debug

      - name: Build release AAB
        run: bash ./gradlew bundleLegacyRelease

      - name: Sign release AAB
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: apps/spyfall/build/outputs/bundle/LegacyRelease
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.KEYALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Make release aab artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release-signed
          path: ${{steps.sign_aab.outputs.signedReleaseFile}}

      - name: Create Or Update the Draft Release
        id: create_release
        uses: actions/create-or-update-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: true
          prerelease: false

      - name: Upload release APK to Github Draft Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.sign_apk.outputs.signedReleaseFile}}
          asset_name: app-release-signed.apk
          asset_content_type: application/zip

      - name: Upload debug APK to Github Draft Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apps/spyfall/build/outputs/apk/Legacy/debug
          asset_name: app-debug.apk
          asset_content_type: application/zip

      - name: Upload release AAB to Github Draft Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.sign_aab.outputs.signedReleaseFile}}
          asset_name: app-release-signed.aab
          asset_content_type: application/zip
